{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan McCroary\\\\SWENG Assignments\\\\github_analysis\\\\src\\\\components\\\\LanguageList.jsx\";\nimport React from 'react';\nimport BarChart from './BarChart';\nlet x = '';\nlet langs = [];\n\nconst LanguageList = props => {\n  if (props.langslist) {\n    {\n      var totalcount = Object.entries(props.langslist).map(([key, eachitem]) => eachitem.count).reduce((pv, cv) => pv + cv, 0);\n    }\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, Object.entries(props.langslist).map(([key, eachitem]) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, key, \" - \", Math.round(100 * eachitem.count / totalcount), \"%\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, console.log(x = x + key.count + ','))))), console.log(x), React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Languages\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      data: x.split(','),\n      size: [500, 500],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), x = ''));\n  } else {\n    return null;\n  }\n};\n\nexport default LanguageList;","map":{"version":3,"sources":["C:/Users/Evan McCroary/SWENG Assignments/github_analysis/src/components/LanguageList.jsx"],"names":["React","BarChart","x","langs","LanguageList","props","langslist","totalcount","Object","entries","map","key","eachitem","count","reduce","pv","cv","Math","round","console","log","split"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,IAAIC,CAAC,GAAG,EAAR;AACA,IAAIC,KAAK,GAAG,EAAZ;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,MAAIA,KAAK,CAACC,SAAV,EAAqB;AACjB;AACI,UAAIC,UAAU,GAAGC,MAAM,CAACC,OAAP,CAAeJ,KAAK,CAACC,SAArB,EAAgCI,GAAhC,CAAoC,CAAC,CAACC,GAAD,EAAMC,QAAN,CAAD,KAChDA,QAAQ,CAACC,KADG,EACKC,MADL,CACY,CAACC,EAAD,EAAKC,EAAL,KAAYD,EAAE,GAAGC,EAD7B,EACiC,CADjC,CAAjB;AAEH;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQR,MAAM,CAACC,OAAP,CAAeJ,KAAK,CAACC,SAArB,EAAgCI,GAAhC,CAAoC,CAAC,CAACC,GAAD,EAAMC,QAAN,CAAD,KAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,GADL,SACaM,IAAI,CAACC,KAAL,CAAW,MAAMN,QAAQ,CAACC,KAAf,GAAuBN,UAAlC,CADb,MADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMY,OAAO,CAACC,GAAR,CAAYlB,CAAC,GAAGA,CAAC,GAAGS,GAAG,CAACE,KAAR,GAAgB,GAAhC,CAAN,CAJJ,CADJ,CAFR,CADJ,EAUKM,OAAO,CAACC,GAAR,CAAYlB,CAAZ,CAVL,EAWI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAXJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,CAAC,CAACmB,KAAF,CAAQ,GAAR,CAAhB;AAA8B,MAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKnB,CAAC,GAAG,EAFT,CAfJ,CADJ;AAuBH,GA5BD,MA4BO;AAAE,WAAO,IAAP;AAAc;AAE1B,CA/BD;;AAiCA,eAAeE,YAAf","sourcesContent":["import React from 'react';\r\nimport BarChart from './BarChart';\r\nlet x = ''\r\nlet langs = []\r\nconst LanguageList = (props) => {\r\n    if (props.langslist) {\r\n        {\r\n            var totalcount = Object.entries(props.langslist).map(([key, eachitem]) =>\r\n                (eachitem.count)).reduce((pv, cv) => pv + cv, 0)\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {\r\n                        Object.entries(props.langslist).map(([key, eachitem]) =>\r\n                            <div>\r\n                                <div key={key}>\r\n                                    {key} - {Math.round(100 * eachitem.count / totalcount)}%\r\n              </div>\r\n                                <div>{console.log(x = x + key.count + ',')}</div></div>)}\r\n                </div>\r\n                {console.log(x)}\r\n                <div className='App-header'>\r\n                <hr></hr>\r\n                    <h2>Languages</h2>\r\n                </div>\r\n                <div>\r\n                    <BarChart data={x.split(',')} size={[500, 500]} />\r\n                    {x = ''}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    } else { return null; }\r\n\r\n};\r\n\r\nexport default LanguageList;\r\n"]},"metadata":{},"sourceType":"module"}