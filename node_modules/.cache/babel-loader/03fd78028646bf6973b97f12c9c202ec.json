{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan McCroary\\\\SWENG Assignments\\\\github_analysis\\\\src\\\\App.jsx\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from './components/Form.jsx';\nimport LanguageList from './components/LanguageList.jsx';\nimport ProfileDetails from './components/ProfileDetails.jsx';\nconst mystyle = {\n  color: \"grey\",\n  padding: \"60px\",\n  fontFamily: \"sans-serif\",\n  fontSize: \"25px\",\n  textAlign: \"center\"\n};\nconst headerStyle = {\n  color: \"black\",\n  backgroundColor: \"MediumAquaMarine\",\n  padding: \"10px\",\n  fontFamily: \"Arial\"\n};\nconst headerSpecific = {\n  color: \"white\",\n  padding: \"10px\",\n  fontFamily: \"sans-serif\",\n  fontSize: \"45px\"\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      gitun: 'No username',\n      infoclean: '',\n      formData: {\n        username: ''\n      },\n      replanguagecount: {},\n      repitems: null,\n      staritems: null\n    };\n    this.handleUserFormSubmit = this.handleUserFormSubmit.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n  }\n\n  handleUserFormSubmit(event) {\n    event.preventDefault();\n    axios.get('https://api.github.com/users/' + this.state.formData.username).then(response => this.setState({\n      gitun: response.data.login,\n      infoclean: response.data\n    })).catch(err => {\n      console.log(err);\n    });\n    axios.get('https://api.github.com/users/' + this.state.formData.username + '/repos').then(response => {\n      this.setState({\n        replanguagecount: null\n      });\n      var itemsWithFalseForks = response.data.filter(item => item.fork === false);\n      var sortedItems = itemsWithFalseForks.sort((b, a) => {\n        if (a.watchers_count + a.forks_count < b.forks_count + b.watchers_count) {\n          return -1;\n        } else if (a.watchers_count + a.forks_count > b.forks_count + b.watchers_count) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      let totalforks = 0;\n      let totalwatchers = 0;\n      let dictrlc = Object.assign({}, this.state.replanguagecount);\n\n      for (var i = 0; i < itemsWithFalseForks.length; i++) {\n        dictrlc[itemsWithFalseForks[i]['language']] = -~dictrlc[itemsWithFalseForks[i]['language']];\n        totalforks = totalforks + itemsWithFalseForks[i]['forks_count'];\n        totalwatchers = totalwatchers + itemsWithFalseForks[i]['watchers_count'];\n      }\n\n      let dictrlcclean = [];\n      let iterarray = Object.entries(dictrlc);\n\n      for (var n = 0; n < iterarray.length; n++) {\n        dictrlcclean.push(Object.assign({}, {\n          lang: iterarray[n][0],\n          count: iterarray[n][1]\n        }));\n      }\n\n      var dictrlccleansorted = dictrlcclean.sort((b, a) => {\n        if (a.count < b.count) {\n          return -1;\n        } else if (a.count > b.count) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      this.setState({\n        repitems: sortedItems.slice(0, 10),\n        replanguagecount: dictrlccleansorted,\n        totalforks: totalforks,\n        totalwatchers: totalwatchers\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleFormChange(event) {\n    const obj = this.state.formData;\n    obj[event.target.name] = event.target.value;\n    this.setState(obj);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      class: \"navbar bg-warning navbar-dar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: headerSpecific,\n      class: \"navbar-brand\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Github API Analytics\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Form, {\n      formData: this.state.formData,\n      handleUserFormSubmit: this.handleUserFormSubmit,\n      handleFormChange: this.handleFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      class: \"container\",\n      style: mystyle,\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"This site provides information on GitHub user accounts.\")), React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(ProfileDetails, {\n      infoclean: this.state.infoclean,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(LanguageList, {\n      langlist: this.state.replangugaecount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Evan McCroary/SWENG Assignments/github_analysis/src/App.jsx"],"names":["React","Component","axios","Form","LanguageList","ProfileDetails","mystyle","color","padding","fontFamily","fontSize","textAlign","headerStyle","backgroundColor","headerSpecific","App","constructor","state","gitun","infoclean","formData","username","replanguagecount","repitems","staritems","handleUserFormSubmit","bind","handleFormChange","event","preventDefault","get","then","response","setState","data","login","catch","err","console","log","itemsWithFalseForks","filter","item","fork","sortedItems","sort","b","a","watchers_count","forks_count","totalforks","totalwatchers","dictrlc","Object","assign","i","length","dictrlcclean","iterarray","entries","n","push","lang","count","dictrlccleansorted","slice","obj","target","name","value","render","replangugaecount"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Form from './components/Form.jsx';\r\nimport LanguageList from './components/LanguageList.jsx';\r\nimport ProfileDetails from './components/ProfileDetails.jsx';\r\n\r\nconst mystyle = {\r\n  color: \"grey\",\r\n  padding: \"60px\",\r\n  fontFamily: \"sans-serif\",\r\n  fontSize: \"25px\",\r\n  textAlign: \"center\"\r\n};\r\n\r\nconst headerStyle = {\r\n  color: \"black\",\r\n  backgroundColor: \"MediumAquaMarine\",\r\n  padding: \"10px\",\r\n  fontFamily: \"Arial\"\r\n};\r\n\r\nconst headerSpecific = {\r\n  color: \"white\",\r\n  padding: \"10px\",\r\n  fontFamily: \"sans-serif\",\r\n  fontSize: \"45px\"\r\n}\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gitun: 'No username',\r\n      infoclean : '',\r\n      formData: {\r\n        username: '',\r\n      },\r\n      replanguagecount: {},\r\n      repitems: null,\r\n      staritems: null\r\n }\r\n    this.handleUserFormSubmit = this.handleUserFormSubmit.bind(this);\r\n    this.handleFormChange= this.handleFormChange.bind(this);\r\n  }\r\nhandleUserFormSubmit(event) {\r\n    event.preventDefault();\r\n       axios.get('https://api.github.com/users/'+this.state.formData.username)\r\n    .then(response => this.setState({\r\n      gitun: response.data.login,\r\n      infoclean: response.data,\r\n    })).catch((err) => { console.log(err); });\r\n\r\n    axios.get('https://api.github.com/users/'+this.state.formData.username+'/repos')\r\n    .then(response => {\r\n\r\n  this.setState({\r\n    replanguagecount: null\r\n  })\r\n\r\n  var itemsWithFalseForks = response.data.filter(item => item.fork === false)\r\n\r\n      var sortedItems = itemsWithFalseForks.sort((b,a) => {\r\n        if((a.watchers_count +  a.forks_count) < (b.forks_count + b.watchers_count)){\r\n          return -1\r\n        }else if ((a.watchers_count +  a.forks_count) > (b.forks_count + b.watchers_count)){\r\n          return 1\r\n        }else {\r\n          return 0\r\n        }\r\n      })\r\n\r\n      let totalforks = 0;\r\n      let totalwatchers = 0;\r\n      let dictrlc = Object.assign({}, this.state.replanguagecount);\r\n      for (var i = 0; i < itemsWithFalseForks.length; i++) {\r\n          dictrlc[itemsWithFalseForks[i]['language']] = -~ dictrlc[itemsWithFalseForks[i]['language']]\r\n          totalforks = totalforks + itemsWithFalseForks[i]['forks_count']\r\n          totalwatchers = totalwatchers + itemsWithFalseForks[i]['watchers_count']\r\n      }\r\n\r\n      let dictrlcclean = [];\r\n      let iterarray = Object.entries(dictrlc)\r\n      for (var n = 0; n < iterarray.length; n++) {\r\n        dictrlcclean.push(\r\n          Object.assign({},\r\n          {lang: iterarray[n][0], count: iterarray[n][1]}))\r\n      }\r\n\r\n      var dictrlccleansorted = dictrlcclean.sort((b,a) => {\r\n        if (a.count < b.count) {\r\n          return -1\r\n        }else if (a.count > b.count){\r\n          return 1\r\n        }else {\r\n          return 0\r\n        }\r\n      })\r\n\r\n      this.setState({\r\n        repitems: sortedItems.slice(0,10),\r\n        replanguagecount: dictrlccleansorted,\r\n        totalforks: totalforks,\r\n        totalwatchers: totalwatchers\r\n      })\r\n\r\n    }).catch((err) => { console.log(err); })\r\n  };\r\n\r\n\r\nhandleFormChange(event) {\r\n    const obj = this.state.formData;\r\n    obj[event.target.name] = event.target.value;\r\n    this.setState(obj);\r\n  };\r\nrender() {\r\n      return(\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <nav class=\"navbar bg-warning navbar-dar\">\r\n              <h1><a style={headerSpecific} class=\"navbar-brand\" href=\"#\">Github API Analytics</a></h1>\r\n              <div>\r\n                <Form\r\n                  formData={this.state.formData}\r\n                  handleUserFormSubmit={this.handleUserFormSubmit}\r\n                  handleFormChange={this.handleFormChange}\r\n                />\r\n              </div>\r\n          </nav>\r\n      </header>\r\n      <div>\r\n        <p class=\"container\" style={mystyle} className=\"App-intro\">\r\n          This site provides information on GitHub user accounts.\r\n        </p>\r\n      </div>\r\n      <div class=\"container\">\r\n            <ProfileDetails infoclean={this.state.infoclean}/>\r\n      </div>\r\n      <div>\r\n        <p class=\"container\">\r\n            <LanguageList  langlist={this.state.replangugaecount}/>\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}