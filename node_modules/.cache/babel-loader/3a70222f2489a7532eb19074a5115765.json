{"ast":null,"code":"var stem = require('stem-porter'); //\n// Based on javascript implementation https://github.com/awaisathar/lda.js\n// Original code based on http://www.arbylon.net/projects/LdaGibbsSampler.java\n//\n\n\nvar process = function (sentences, numberOfTopics, numberOfTermsPerTopic, languages, alphaValue, betaValue, randomSeed) {\n  // The result will consist of topics and their included terms [[{\"term\":\"word1\", \"probability\":0.065}, {\"term\":\"word2\", \"probability\":0.047}, ... ], [{\"term\":\"word1\", \"probability\":0.085}, {\"term\":\"word2\", \"probability\":0.024}, ... ]].\n  var result = []; // Index-encoded array of sentences, with each row containing the indices of the words in the vocabulary.\n\n  var documents = new Array(); // Hash of vocabulary words and the count of how many times each word has been seen.\n\n  var f = {}; // Vocabulary of unique words (porter stemmed).\n\n  var vocab = new Array(); // Vocabulary of unique words in their original form.\n\n  var vocabOrig = {}; // Array of stop words\n\n  languages = languages || Array('en');\n\n  if (sentences && sentences.length > 0) {\n    var stopwords = new Array();\n    languages.forEach(function (value) {\n      var stopwordsLang = require('./stopwords_' + value + \".js\");\n\n      stopwords = stopwords.concat(stopwordsLang.stop_words);\n    });\n\n    for (var i = 0; i < sentences.length; i++) {\n      if (sentences[i] == \"\") continue;\n      documents[i] = new Array();\n      var words = sentences[i] ? sentences[i].split(/[\\s,\\\"]+/) : null;\n      if (!words) continue;\n\n      for (var wc = 0; wc < words.length; wc++) {\n        var w = words[wc].toLowerCase().replace(/[^a-z\\'A-Z0-9\\u00C0-\\u00ff ]+/g, '');\n        var wStemmed = stem(w);\n        if (w == \"\" || !wStemmed || w.length == 1 || stopwords.indexOf(w.replace(\"'\", \"\")) > -1 || stopwords.indexOf(wStemmed) > -1 || w.indexOf(\"http\") == 0) continue;\n\n        if (f[wStemmed]) {\n          f[wStemmed] = f[wStemmed] + 1;\n        } else if (wStemmed) {\n          f[wStemmed] = 1;\n          vocab.push(wStemmed);\n          vocabOrig[wStemmed] = w;\n        }\n\n        ;\n        documents[i].push(vocab.indexOf(wStemmed));\n      }\n    }\n\n    var V = vocab.length;\n    var M = documents.length;\n    var K = parseInt(numberOfTopics);\n    var alpha = alphaValue || 0.1; // per-document distributions over topics\n\n    var beta = betaValue || .01; // per-topic distributions over words\n\n    documents = documents.filter(doc => {\n      return doc.length;\n    }); // filter empty documents\n\n    lda.configure(documents, V, 10000, 2000, 100, 10, randomSeed);\n    lda.gibbs(K, alpha, beta);\n    var theta = lda.getTheta();\n    var phi = lda.getPhi();\n    var text = ''; //topics\n\n    var topTerms = numberOfTermsPerTopic;\n\n    for (var k = 0; k < phi.length; k++) {\n      var things = new Array();\n\n      for (var w = 0; w < phi[k].length; w++) {\n        things.push(\"\" + phi[k][w].toPrecision(2) + \"_\" + vocab[w] + \"_\" + vocabOrig[vocab[w]]);\n      }\n\n      things.sort().reverse(); //console.log(things);\n\n      if (topTerms > vocab.length) topTerms = vocab.length; //console.log('Topic ' + (k + 1));\n\n      var row = [];\n\n      for (var t = 0; t < topTerms; t++) {\n        var topicTerm = things[t].split(\"_\")[2];\n        var prob = parseInt(things[t].split(\"_\")[0] * 100);\n        if (prob < 2) continue; //console.log('Top Term: ' + topicTerm + ' (' + prob + '%)');\n\n        var term = {};\n        term.term = topicTerm;\n        term.probability = parseFloat(things[t].split(\"_\")[0]);\n        row.push(term);\n      }\n\n      result.push(row);\n    }\n  }\n\n  return result;\n};\n\nfunction makeArray(x) {\n  var a = new Array();\n\n  for (var i = 0; i < x; i++) {\n    a[i] = 0;\n  }\n\n  return a;\n}\n\nfunction make2DArray(x, y) {\n  var a = new Array();\n\n  for (var i = 0; i < x; i++) {\n    a[i] = new Array();\n\n    for (var j = 0; j < y; j++) a[i][j] = 0;\n  }\n\n  return a;\n}\n\nvar lda = new function () {\n  var documents, z, nw, nd, nwsum, ndsum, thetasum, phisum, V, K, alpha, beta;\n  var THIN_INTERVAL = 20;\n  var BURN_IN = 100;\n  var ITERATIONS = 1000;\n  var SAMPLE_LAG;\n  var RANDOM_SEED;\n  var dispcol = 0;\n  var numstats = 0;\n\n  this.configure = function (docs, v, iterations, burnIn, thinInterval, sampleLag, randomSeed) {\n    this.ITERATIONS = iterations;\n    this.BURN_IN = burnIn;\n    this.THIN_INTERVAL = thinInterval;\n    this.SAMPLE_LAG = sampleLag;\n    this.RANDOM_SEED = randomSeed;\n    this.documents = docs;\n    this.V = v;\n    this.dispcol = 0;\n    this.numstats = 0;\n  };\n\n  this.initialState = function (K) {\n    var i;\n    var M = this.documents.length;\n    this.nw = make2DArray(this.V, K);\n    this.nd = make2DArray(M, K);\n    this.nwsum = makeArray(K);\n    this.ndsum = makeArray(M);\n    this.z = new Array();\n\n    for (i = 0; i < M; i++) this.z[i] = new Array();\n\n    for (var m = 0; m < M; m++) {\n      var N = this.documents[m].length;\n      this.z[m] = new Array();\n\n      for (var n = 0; n < N; n++) {\n        var topic = parseInt(\"\" + this.getRandom() * K);\n        this.z[m][n] = topic;\n        this.nw[this.documents[m][n]][topic]++;\n        this.nd[m][topic]++;\n        this.nwsum[topic]++;\n      }\n\n      this.ndsum[m] = N;\n    }\n  };\n\n  this.gibbs = function (K, alpha, beta) {\n    var i;\n    this.K = K;\n    this.alpha = alpha;\n    this.beta = beta;\n\n    if (this.SAMPLE_LAG > 0) {\n      this.thetasum = make2DArray(this.documents.length, this.K);\n      this.phisum = make2DArray(this.K, this.V);\n      this.numstats = 0;\n    }\n\n    this.initialState(K); //document.write(\"Sampling \" + this.ITERATIONS\n    //   + \" iterations with burn-in of \" + this.BURN_IN + \" (B/S=\"\n    //   + this.THIN_INTERVAL + \").<br/>\");\n\n    for (i = 0; i < this.ITERATIONS; i++) {\n      for (var m = 0; m < this.z.length; m++) {\n        for (var n = 0; n < this.z[m].length; n++) {\n          var topic = this.sampleFullConditional(m, n);\n          this.z[m][n] = topic;\n        }\n      }\n\n      if (i < this.BURN_IN && i % this.THIN_INTERVAL == 0) {\n        //document.write(\"B\");\n        this.dispcol++;\n      }\n\n      if (i > this.BURN_IN && i % this.THIN_INTERVAL == 0) {\n        //document.write(\"S\");\n        this.dispcol++;\n      }\n\n      if (i > this.BURN_IN && this.SAMPLE_LAG > 0 && i % this.SAMPLE_LAG == 0) {\n        this.updateParams(); //document.write(\"|\");                \n\n        if (i % this.THIN_INTERVAL != 0) this.dispcol++;\n      }\n\n      if (this.dispcol >= 100) {\n        //document.write(\"*<br/>\");                \n        this.dispcol = 0;\n      }\n    }\n  };\n\n  this.sampleFullConditional = function (m, n) {\n    var topic = this.z[m][n];\n    this.nw[this.documents[m][n]][topic]--;\n    this.nd[m][topic]--;\n    this.nwsum[topic]--;\n    this.ndsum[m]--;\n    var p = makeArray(this.K);\n\n    for (var k = 0; k < this.K; k++) {\n      p[k] = (this.nw[this.documents[m][n]][k] + this.beta) / (this.nwsum[k] + this.V * this.beta) * (this.nd[m][k] + this.alpha) / (this.ndsum[m] + this.K * this.alpha);\n    }\n\n    for (var k = 1; k < p.length; k++) {\n      p[k] += p[k - 1];\n    }\n\n    var u = this.getRandom() * p[this.K - 1];\n\n    for (topic = 0; topic < p.length; topic++) {\n      if (u < p[topic]) break;\n    }\n\n    this.nw[this.documents[m][n]][topic]++;\n    this.nd[m][topic]++;\n    this.nwsum[topic]++;\n    this.ndsum[m]++;\n    return topic;\n  };\n\n  this.updateParams = function () {\n    for (var m = 0; m < this.documents.length; m++) {\n      for (var k = 0; k < this.K; k++) {\n        this.thetasum[m][k] += (this.nd[m][k] + this.alpha) / (this.ndsum[m] + this.K * this.alpha);\n      }\n    }\n\n    for (var k = 0; k < this.K; k++) {\n      for (var w = 0; w < this.V; w++) {\n        this.phisum[k][w] += (this.nw[w][k] + this.beta) / (this.nwsum[k] + this.V * this.beta);\n      }\n    }\n\n    this.numstats++;\n  };\n\n  this.getTheta = function () {\n    var theta = new Array();\n\n    for (var i = 0; i < this.documents.length; i++) theta[i] = new Array();\n\n    if (this.SAMPLE_LAG > 0) {\n      for (var m = 0; m < this.documents.length; m++) {\n        for (var k = 0; k < this.K; k++) {\n          theta[m][k] = this.thetasum[m][k] / this.numstats;\n        }\n      }\n    } else {\n      for (var m = 0; m < this.documents.length; m++) {\n        for (var k = 0; k < this.K; k++) {\n          theta[m][k] = (this.nd[m][k] + this.alpha) / (this.ndsum[m] + this.K * this.alpha);\n        }\n      }\n    }\n\n    return theta;\n  };\n\n  this.getPhi = function () {\n    var phi = new Array();\n\n    for (var i = 0; i < this.K; i++) phi[i] = new Array();\n\n    if (this.SAMPLE_LAG > 0) {\n      for (var k = 0; k < this.K; k++) {\n        for (var w = 0; w < this.V; w++) {\n          phi[k][w] = this.phisum[k][w] / this.numstats;\n        }\n      }\n    } else {\n      for (var k = 0; k < this.K; k++) {\n        for (var w = 0; w < this.V; w++) {\n          phi[k][w] = (this.nw[w][k] + this.beta) / (this.nwsum[k] + this.V * this.beta);\n        }\n      }\n    }\n\n    return phi;\n  };\n\n  this.getRandom = function () {\n    if (this.RANDOM_SEED) {\n      // generate a pseudo-random number using a seed to ensure reproducable results.\n      var x = Math.sin(this.RANDOM_SEED++) * 1000000;\n      return x - Math.floor(x);\n    } else {\n      // use standard random algorithm.\n      return Math.random();\n    }\n  };\n}();\nmodule.exports = process;","map":{"version":3,"sources":["C:/Users/Evan McCroary/SWENG Assignments/github_analysis/src/lda/lib/lda.js"],"names":["stem","require","process","sentences","numberOfTopics","numberOfTermsPerTopic","languages","alphaValue","betaValue","randomSeed","result","documents","Array","f","vocab","vocabOrig","length","stopwords","forEach","value","stopwordsLang","concat","stop_words","i","words","split","wc","w","toLowerCase","replace","wStemmed","indexOf","push","V","M","K","parseInt","alpha","beta","filter","doc","lda","configure","gibbs","theta","getTheta","phi","getPhi","text","topTerms","k","things","toPrecision","sort","reverse","row","t","topicTerm","prob","term","probability","parseFloat","makeArray","x","a","make2DArray","y","j","z","nw","nd","nwsum","ndsum","thetasum","phisum","THIN_INTERVAL","BURN_IN","ITERATIONS","SAMPLE_LAG","RANDOM_SEED","dispcol","numstats","docs","v","iterations","burnIn","thinInterval","sampleLag","initialState","m","N","n","topic","getRandom","sampleFullConditional","updateParams","p","u","Math","sin","floor","random","module","exports"],"mappings":"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","sourcesContent":["var stem = require('stem-porter');\n\n//\n// Based on javascript implementation https://github.com/awaisathar/lda.js\n// Original code based on http://www.arbylon.net/projects/LdaGibbsSampler.java\n//\nvar process = function(sentences, numberOfTopics, numberOfTermsPerTopic, languages, alphaValue, betaValue, randomSeed) {\n    // The result will consist of topics and their included terms [[{\"term\":\"word1\", \"probability\":0.065}, {\"term\":\"word2\", \"probability\":0.047}, ... ], [{\"term\":\"word1\", \"probability\":0.085}, {\"term\":\"word2\", \"probability\":0.024}, ... ]].\n    var result = [];\n    // Index-encoded array of sentences, with each row containing the indices of the words in the vocabulary.\n    var documents = new Array();\n    // Hash of vocabulary words and the count of how many times each word has been seen.\n    var f = {};\n    // Vocabulary of unique words (porter stemmed).\n    var vocab=new Array();\n    // Vocabulary of unique words in their original form.\n    var vocabOrig = {};\n    // Array of stop words\n    languages = languages || Array('en');\n\n    if (sentences && sentences.length > 0) {\n      var stopwords = new Array();\n\n      languages.forEach(function(value) {\n          var stopwordsLang = require('./stopwords_' + value + \".js\");\n          stopwords = stopwords.concat(stopwordsLang.stop_words);\n      });\n\n      for(var i=0;i<sentences.length;i++) {\n          if (sentences[i]==\"\") continue;\n          documents[i] = new Array();\n\n          var words = sentences[i] ? sentences[i].split(/[\\s,\\\"]+/) : null;\n\n          if(!words) continue;\n          for(var wc=0;wc<words.length;wc++) {\n              var w=words[wc].toLowerCase().replace(/[^a-z\\'A-Z0-9\\u00C0-\\u00ff ]+/g, '');\n              var wStemmed = stem(w);\n              if (w==\"\" || !wStemmed || w.length==1 || stopwords.indexOf(w.replace(\"'\", \"\")) > -1 || stopwords.indexOf(wStemmed) > -1 || w.indexOf(\"http\")==0) continue;\n              if (f[wStemmed]) { \n                  f[wStemmed]=f[wStemmed]+1;\n              } \n              else if(wStemmed) { \n                  f[wStemmed]=1; \n                  vocab.push(wStemmed);\n                  vocabOrig[wStemmed] = w;\n              };\n              \n              documents[i].push(vocab.indexOf(wStemmed));\n          }\n      }\n\n      var V = vocab.length;\n      var M = documents.length;\n      var K = parseInt(numberOfTopics);\n      var alpha = alphaValue || 0.1;  // per-document distributions over topics\n      var beta = betaValue || .01;  // per-topic distributions over words\n      documents = documents.filter((doc) => { return doc.length }); // filter empty documents\n\n      lda.configure(documents,V,10000, 2000, 100, 10, randomSeed);\n      lda.gibbs(K, alpha, beta);\n\n      var theta = lda.getTheta();\n      var phi = lda.getPhi();\n\n      var text = '';\n\n      //topics\n      var topTerms=numberOfTermsPerTopic;\n      for (var k = 0; k < phi.length; k++) {\n          var things = new Array();\n          for (var w = 0; w < phi[k].length; w++) {\n               things.push(\"\"+phi[k][w].toPrecision(2)+\"_\"+vocab[w] + \"_\" + vocabOrig[vocab[w]]);\n          }\n          things.sort().reverse();\n          //console.log(things);\n          if(topTerms>vocab.length) topTerms=vocab.length;\n\n          //console.log('Topic ' + (k + 1));\n          var row = [];\n          \n          for (var t = 0; t < topTerms; t++) {\n              var topicTerm=things[t].split(\"_\")[2];\n              var prob=parseInt(things[t].split(\"_\")[0]*100);\n              if (prob<2) continue;\n              \n              //console.log('Top Term: ' + topicTerm + ' (' + prob + '%)');\n              \n              var term = {};\n              term.term = topicTerm;\n              term.probability = parseFloat(things[t].split(\"_\")[0]);\n              row.push(term);\n          }\n\n          result.push(row);\n      }\n    }\n    \n    return result;\n}\n\nfunction makeArray(x) {\n    var a = new Array();    \n    for (var i=0;i<x;i++)  {\n        a[i]=0;\n    }\n    return a;\n}\n\nfunction make2DArray(x,y) {\n    var a = new Array();    \n    for (var i=0;i<x;i++)  {\n        a[i]=new Array();\n        for (var j=0;j<y;j++)\n            a[i][j]=0;\n    }\n    return a;\n}\n\nvar lda = new function() {\n    var documents,z,nw,nd,nwsum,ndsum,thetasum,phisum,V,K,alpha,beta; \n    var THIN_INTERVAL = 20;\n    var BURN_IN = 100;\n    var ITERATIONS = 1000;\n    var SAMPLE_LAG;\n    var RANDOM_SEED;\n    var dispcol = 0;\n    var numstats=0;\n    this.configure = function (docs,v,iterations,burnIn,thinInterval,sampleLag,randomSeed) {\n        this.ITERATIONS = iterations;\n        this.BURN_IN = burnIn;\n        this.THIN_INTERVAL = thinInterval;\n        this.SAMPLE_LAG = sampleLag;\n        this.RANDOM_SEED = randomSeed;\n        this.documents = docs;\n        this.V = v;\n        this.dispcol=0;\n        this.numstats=0; \n    }\n    this.initialState = function (K) {\n        var i;\n        var M = this.documents.length;\n        this.nw = make2DArray(this.V,K); \n        this.nd = make2DArray(M,K); \n        this.nwsum = makeArray(K); \n        this.ndsum = makeArray(M);\n        this.z = new Array();   for (i=0;i<M;i++) this.z[i]=new Array();\n        for (var m = 0; m < M; m++) {\n                var N = this.documents[m].length;\n                this.z[m] = new Array();\n                for (var n = 0; n < N; n++) {\n                    var topic = parseInt(\"\"+(this.getRandom() * K));                 \n                    this.z[m][n] = topic;\n                    this.nw[this.documents[m][n]][topic]++;\n                    this.nd[m][topic]++;\n                    this.nwsum[topic]++;\n                }\n                this.ndsum[m] = N;\n        }\n    }\n    \n    this.gibbs = function (K,alpha,beta) {\n        var i;\n        this.K = K;\n        this.alpha = alpha;\n        this.beta = beta;\n        if (this.SAMPLE_LAG > 0) {\n            this.thetasum = make2DArray(this.documents.length,this.K);\n            this.phisum = make2DArray(this.K,this.V);\n            this.numstats = 0;\n        }\n        this.initialState(K);\n        //document.write(\"Sampling \" + this.ITERATIONS\n         //   + \" iterations with burn-in of \" + this.BURN_IN + \" (B/S=\"\n         //   + this.THIN_INTERVAL + \").<br/>\");\n        for (i = 0; i < this.ITERATIONS; i++) {\n            for (var m = 0; m < this.z.length; m++) {\n                for (var n = 0; n < this.z[m].length; n++) {\n                    var topic = this.sampleFullConditional(m, n);\n                    this.z[m][n] = topic;\n                }\n            }\n            if ((i < this.BURN_IN) && (i % this.THIN_INTERVAL == 0)) {\n                //document.write(\"B\");\n                this.dispcol++;\n            }\n            if ((i > this.BURN_IN) && (i % this.THIN_INTERVAL == 0)) {\n                //document.write(\"S\");\n                this.dispcol++;\n            }\n            if ((i > this.BURN_IN) && (this.SAMPLE_LAG > 0) && (i % this.SAMPLE_LAG == 0)) {\n                this.updateParams();\n                //document.write(\"|\");                \n                if (i % this.THIN_INTERVAL != 0)\n                    this.dispcol++;\n            }\n            if (this.dispcol >= 100) {\n                //document.write(\"*<br/>\");                \n                this.dispcol = 0;\n            }\n        }\n    }\n    \n    this.sampleFullConditional = function(m,n) {\n        var topic = this.z[m][n];\n        this.nw[this.documents[m][n]][topic]--;\n        this.nd[m][topic]--;\n        this.nwsum[topic]--;\n        this.ndsum[m]--;\n        var p = makeArray(this.K);\n        for (var k = 0; k < this.K; k++) {\n            p[k] = (this.nw[this.documents[m][n]][k] + this.beta) / (this.nwsum[k] + this.V * this.beta)\n                * (this.nd[m][k] + this.alpha) / (this.ndsum[m] + this.K * this.alpha);\n        }\n        for (var k = 1; k < p.length; k++) {\n            p[k] += p[k - 1];\n        }\n        var u = this.getRandom() * p[this.K - 1];\n        for (topic = 0; topic < p.length; topic++) {\n            if (u < p[topic])\n                break;\n        }\n        this.nw[this.documents[m][n]][topic]++;\n        this.nd[m][topic]++;\n        this.nwsum[topic]++;\n        this.ndsum[m]++;\n        return topic;\n    }\n    \n    this.updateParams =function () {\n        for (var m = 0; m < this.documents.length; m++) {\n            for (var k = 0; k < this.K; k++) {\n                this.thetasum[m][k] += (this.nd[m][k] + this.alpha) / (this.ndsum[m] + this.K * this.alpha);\n            }\n        }\n        for (var k = 0; k < this.K; k++) {\n            for (var w = 0; w < this.V; w++) {\n                this.phisum[k][w] += (this.nw[w][k] + this.beta) / (this.nwsum[k] + this.V * this.beta);\n            }\n        }\n        this.numstats++;\n    }\n    \n    this.getTheta = function() {\n        var theta = new Array(); for(var i=0;i<this.documents.length;i++) theta[i] = new Array();\n        if (this.SAMPLE_LAG > 0) {\n            for (var m = 0; m < this.documents.length; m++) {\n                for (var k = 0; k < this.K; k++) {\n                    theta[m][k] = this.thetasum[m][k] / this.numstats;\n                }\n            }\n        } else {\n            for (var m = 0; m < this.documents.length; m++) {\n                for (var k = 0; k < this.K; k++) {\n                    theta[m][k] = (this.nd[m][k] + this.alpha) / (this.ndsum[m] + this.K * this.alpha);\n                }\n            }\n        }\n        return theta;\n    }\n    \n    this.getPhi = function () {\n        var phi = new Array(); for(var i=0;i<this.K;i++) phi[i] = new Array();\n        if (this.SAMPLE_LAG > 0) {\n            for (var k = 0; k < this.K; k++) {\n                for (var w = 0; w < this.V; w++) {\n                    phi[k][w] = this.phisum[k][w] / this.numstats;\n                }\n            }\n        } else {\n            for (var k = 0; k < this.K; k++) {\n                for (var w = 0; w < this.V; w++) {\n                    phi[k][w] = (this.nw[w][k] + this.beta) / (this.nwsum[k] + this.V * this.beta);\n                }\n            }\n        }\n        return phi;\n    }\n\n    this.getRandom = function() {\n        if (this.RANDOM_SEED) {\n            // generate a pseudo-random number using a seed to ensure reproducable results.\n            var x = Math.sin(this.RANDOM_SEED++) * 1000000;\n            return x - Math.floor(x);\n        } else {\n            // use standard random algorithm.\n            return Math.random();\n        }\n    }\n}\n\nmodule.exports = process;\n"]},"metadata":{},"sourceType":"module"}