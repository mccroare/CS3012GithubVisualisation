{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan McCroary\\\\SWENG Assignments\\\\github_analysis\\\\src\\\\components\\\\LanguageList.jsx\";\nimport React from 'react';\n\nconst LanguageList = props => {\n  if (props.langslist) {\n    {\n      var totalcount = Object.entries(props.langslist).map(([key, eachitem]) => eachitem.count).reduce((pv, cv) => pv + cv, 0);\n    }\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, Object.entries(props.langslist).map(([key, eachitem]) => React.createElement(\"div\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, eachitem.lang, \" - \", Math.round(100 * eachitem.count / totalcount), \"%\")));\n  } else {\n    return null;\n  }\n};\n\nexport default LanguageList;","map":{"version":3,"sources":["C:/Users/Evan McCroary/SWENG Assignments/github_analysis/src/components/LanguageList.jsx"],"names":["React","LanguageList","props","langslist","totalcount","Object","entries","map","key","eachitem","count","reduce","pv","cv","lang","Math","round"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,MAAIA,KAAK,CAACC,SAAV,EAAqB;AACnB;AACE,UAAIC,UAAU,GAAIC,MAAM,CAACC,OAAP,CAAeJ,KAAK,CAACC,SAArB,EAAgCI,GAAhC,CAAoC,CAAC,CAACC,GAAD,EAAKC,QAAL,CAAD,KACnDA,QAAQ,CAACC,KADM,EACEC,MADF,CACS,CAACC,EAAD,EAAKC,EAAL,KAAYD,EAAE,GAACC,EADxB,EAC4B,CAD5B,CAAlB;AACmD;AACrD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIR,MAAM,CAACC,OAAP,CAAeJ,KAAK,CAACC,SAArB,EAAgCI,GAAhC,CAAoC,CAAC,CAACC,GAAD,EAAKC,QAAL,CAAD,KAClC;AAAK,MAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,QAAQ,CAACK,IADZ,SACqBC,IAAI,CAACC,KAAL,CAAW,MAAIP,QAAQ,CAACC,KAAb,GAAqBN,UAAhC,CADrB,MADF,CAFJ,CADJ;AASD,GAbD,MAaO;AAAE,WAAO,IAAP;AAAa;AACrB,CAfH;;AAiBA,eAAeH,YAAf","sourcesContent":["import React from 'react';\r\n\r\nconst LanguageList = (props) => {\r\n  if (props.langslist) {\r\n    {\r\n      var totalcount =  Object.entries(props.langslist).map(([key,eachitem]) =>\r\n        (eachitem.count)).reduce((pv, cv) => pv+cv, 0 ) }\r\n    return (\r\n        <div>\r\n          {\r\n            Object.entries(props.langslist).map(([key,eachitem]) =>\r\n              <div key={key}>\r\n                {eachitem.lang} - {Math.round(100*eachitem.count / totalcount)}%\r\n              </div> ) }\r\n        </div>\r\n      )\r\n  } else { return null;}\r\n  };\r\n\r\nexport default LanguageList;\r\n"]},"metadata":{},"sourceType":"module"}